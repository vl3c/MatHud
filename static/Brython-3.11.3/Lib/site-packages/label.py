
from config import default_color, default_font_size
from drawable import Drawable
from point import Point


class Label(Drawable):
    def __init__(self, position, text, canvas, color=default_color, font_size=default_font_size):
        self.origin = Point(position['x'], position['y'], name=f"{text}-label-position", color=color, canvas=canvas)
        self.text = text
        self.font_size = font_size
        super().__init__(name=text, color=color, canvas=canvas)
        self._initialize()

    @Drawable.canvas.setter
    def canvas(self, value):
        self._canvas = value
        self.origin.canvas = value

    @canvas.getter
    def canvas(self):
        return self._canvas

    def _initialize(self):
        self.origin._initialize()
    
    def get_class_name(self):
        return 'Label'
    
    def draw(self):
        x, y = self.origin.x, self.origin.y
        self.create_svg_element('text', x=str(x), y=str(y), fill=self.color, text_content=self.text, text_font_size=self.font_size)

    def _translate(self, offset):
        self.origin._translate(offset)

    def _scale(self, factor):
        self.origin._scale_coordinates(factor)

    def zoom(self):
        if self.canvas:
            self.origin.zoom()
    
    def pan(self):
        self._translate(self.canvas.offset)

    def reset(self):
        self.origin.reset()

    def get_state(self):
        pos = self.origin.original_position
        state = {"class": self.get_class_name(), "args": {"position": {"x": pos.x, "y": pos.y}, "text": self.text}}
        return state