# Mathematical classes and functions
from browser import document, svg

# Default values
point_size = 2
default_color = "black"


class Point:
    def __init__(self, x, y):
        self.x = x
        self.y = y


# Draw a point
def draw_point(*, point, color=default_color):
    point = Point(**point)
    svg_container = document["math-svg"]
    svg_point = svg.circle(cx=str(point.x), cy=str(point.y), r=str(point_size), fill=color)
    svg_container <= svg_point


# Draw a line
def draw_segment(*, point1, point2, color=default_color):
    point1 = Point(**point1)
    point2 = Point(**point2)
    svg_container = document["math-svg"]
    svg_line = svg.line(x1=str(point1.x), y1=str(point1.y), x2=str(point2.x), y2=str(point2.y), stroke=color)
    svg_container <= svg_line


# Draw a triangle
def draw_triangle(*, point1, point2, point3, color=default_color):
    point1 = Point(**point1)
    point2 = Point(**point2)
    point3 = Point(**point3)
    draw_segment(point1=point1.__dict__, point2=point2.__dict__, color=color)
    draw_segment(point1=point2.__dict__, point2=point3.__dict__, color=color)
    draw_segment(point1=point3.__dict__, point2=point1.__dict__, color=color)


# Draw a rectangle
def draw_rectangle(*, top_left, bottom_right, color=default_color):
    top_left = Point(**top_left)
    bottom_right = Point(**bottom_right)
    svg_container = document["math-svg"]
    width = bottom_right.x - top_left.x
    height = bottom_right.y - top_left.y
    svg_rect = svg.rect(x=str(top_left.x), y=str(top_left.y), width=str(width), height=str(height), fill="none", stroke=color)
    svg_container <= svg_rect


# Draw a circle
def draw_circle(*, center, radius, color=default_color):
    center = Point(**center)
    svg_container = document["math-svg"]
    svg_circle = svg.circle(cx=str(center.x), cy=str(center.y), r=str(radius), fill="none", stroke=color)
    svg_container <= svg_circle


# Draw an ellipse
def draw_ellipse(*, center, rx, ry, color=default_color):
    center = Point(**center)
    svg_container = document["math-svg"]
    svg_ellipse = svg.ellipse(cx=str(center.x), cy=str(center.y), rx=str(rx), ry=str(ry), fill="none", stroke=color)
    svg_container <= svg_ellipse


# Draw a vector
def draw_vector(*, origin, tip, color=default_color):
    origin = Point(**origin)
    tip = Point(**tip)
    svg_container = document["math-svg"]
    svg_line = svg.line(x1=str(origin.x), y1=str(origin.y), x2=str(tip.x), y2=str(tip.y), stroke=color)
    svg_container <= svg_line
    # Add an arrow at the tip of the vector
    arrow_tip_radius = point_size * 2  # Adjust this value to change the size of the arrow
    arrow = svg.polygon(points=f'{tip.x},{tip.y-arrow_tip_radius} {tip.x-arrow_tip_radius},{tip.y+arrow_tip_radius} {tip.x+arrow_tip_radius},{tip.y+arrow_tip_radius}', fill=color)
    svg_container <= arrow


# Map function names to functions
function_mapping = {
    'draw_point': draw_point,
    'draw_segment': draw_segment,
    'draw_triangle': draw_triangle,
    'draw_rectangle': draw_rectangle,
    'draw_circle': draw_circle,
    'draw_ellipse': draw_ellipse,
    'draw_vector': draw_vector,
}

"""
[
    {"function": "draw_point", "args": {"point": {"x": 50, "y": 50}}},
    {"function": "draw_segment", "args": {"point1": {"x": 70, "y": 20}, "point2": {"x": 100, "y": 200}}},
    {"function": "draw_rectangle", "args": {"top_left": {"x": 150, "y": 250}, "bottom_right": {"x": 400, "y": 300}}},
    {"function": "draw_triangle", "args": {"point1": {"x": 400, "y": 400}, "point2": {"x": 500, "y": 500}, "point3": {"x": 600, "y": 600}}},
    {"function": "draw_point", "args": {"point": {"x": 700, "y": 700}}},
    {"function": "draw_circle", "args": {"center": {"x": 150, "y": 150}, "radius": 50}},
    {"function": "draw_ellipse", "args": {"center": {"x": 200, "y": 200}, "rx": 50, "ry": 25}},
    {"function": "draw_vector", "args": {"origin": {"x": 100, "y": 100}, "tip": {"x": 200, "y": 200}}},
    {"function": "draw_vector", "args": {"origin": {"x": 450, "y": 200}, "tip": {"x": 320, "y": 110}}}
]
"""