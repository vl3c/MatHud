class DrawableManagerProxy:
    """
    A proxy for the DrawableManager that forwards all attribute access
    to the real manager. This breaks circular dependencies during initialization.
    
    When a specialized manager needs to access another manager through the
    main DrawableManager, it does so through this proxy, which defers
    resolution until runtime.
    """
    
    def __init__(self, real_manager):
        """
        Initialize the proxy with a reference to the real manager.
        
        Args:
            real_manager: The DrawableManager instance this proxy represents
        """
        self._real_manager = real_manager
    
    def __getattr__(self, name):
        """
        Delegate attribute access to the real manager.
        This is called when an attribute doesn't exist on the proxy.
        
        Args:
            name: The name of the attribute to access
            
        Returns:
            The attribute from the real manager
        """
        return getattr(self._real_manager, name) 